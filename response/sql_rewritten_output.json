{
  "queries": [
    {
      "queryid": "27a8890e-63d2-4078-a412-00ed39604ffc",
      "query": "SELECT region, date_trunc('month', payment_dt) AS month, product_type, COUNT(*) AS sales_count\nFROM quests.optimized.payment_facts\nWHERE product_type IN ('Excursion', 'Quest')\nGROUP BY region, date_trunc('month', payment_dt), product_type\nORDER BY region, month;"
    },
    {
      "queryid": "9af46d13-0ef4-4352-9a4c-1a400fcb8878",
      "query": "SELECT\n  CASE\n    WHEN age < 25 THEN '18-24'\n    WHEN age < 35 THEN '25-34'\n    WHEN age < 45 THEN '35-44'\n    ELSE '45+'\n  END AS age_group,\n  COUNT(CASE WHEN product_type = 'Excursion' THEN product_id END) AS excursion_purchases,\n  COUNT(CASE WHEN product_type = 'Quest' THEN product_id END) AS quest_purchases\nFROM quests.optimized.payment_facts\nGROUP BY\n  CASE\n    WHEN age < 25 THEN '18-24'\n    WHEN age < 35 THEN '25-34'\n    WHEN age < 45 THEN '35-44'\n    ELSE '45+'\n  END\nORDER BY\n  COUNT(CASE WHEN product_type = 'Excursion' THEN product_id END) + COUNT(CASE WHEN product_type = 'Quest' THEN product_id END) DESC;"
    },
    {
      "queryid": "dad15399-09ce-465e-b9e3-1712457e00c3",
      "query": "SELECT \n  dc.registration_source, \n  COUNT(*) AS registered_users, \n  COUNT(dc.first_purchase_date) AS buyers, \n  ROUND(COUNT(dc.first_purchase_date) * 100.0 / COUNT(*), 2) AS conversion_rate\nFROM quests.optimized.dim_client dc\nGROUP BY dc.registration_source\nORDER BY conversion_rate DESC;"
    },
    {
      "queryid": "15021609-4e0c-48fd-98e4-1e54bfe651cf",
      "query": "-- queryid: 15021609-4e0c-48fd-98e4-1e54bfe651cf\nWITH base AS (\n    SELECT \n        registration_source,\n        region,\n        date_trunc('month', registration_date) AS month,\n        COUNT(*) AS registered_users,\n        COUNT_IF(first_purchase_date IS NOT NULL) AS buyers\n    FROM quests.optimized.dim_client\n    GROUP BY registration_source, region, date_trunc('month', registration_date)\n),\nbig AS (\n    SELECT * FROM base\n    UNION ALL SELECT * FROM base\n    UNION ALL SELECT * FROM base\n    UNION ALL SELECT * FROM base\n),\ncalc AS (\n    SELECT \n        registration_source,\n        region,\n        month,\n        registered_users,\n        buyers,\n        (SELECT AVG(registered_users) FROM big b2 WHERE b2.region = b1.region) AS avg_reg,\n        (SELECT MAX(buyers) FROM big b3 WHERE b3.registration_source = b1.registration_source) AS max_buy,\n        ROW_NUMBER() OVER (PARTITION BY registration_source, region ORDER BY month) AS rn\n    FROM big b1\n)\nSELECT \n    registration_source,\n    region,\n    month,\n    registered_users,\n    buyers,\n    ROUND(buyers * 100.0 / NULLIF(registered_users, 0), 2) AS conversion_rate,\n    avg_reg,\n    max_buy\nFROM calc\nWHERE rn < 50\nORDER BY random();"
    },
    {
      "queryid": "28f3379d-9b67-4c1f-90f1-b8ee3e3fab52",
      "query": "WITH sales_by_period AS (\n    SELECT \n        dp.language,\n        pf.city,\n        CASE \n            WHEN date_trunc('quarter', pf.payment_dt) = TIMESTAMP '2024-01-01' THEN 'Q1'\n            WHEN date_trunc('quarter', pf.payment_dt) = TIMESTAMP '2024-04-01' THEN 'Q2'\n        END AS quarter,\n        COUNT(*) AS sales_count\n    FROM quests.optimized.payment_facts pf\n    JOIN quests.optimized.dim_product dp \n        ON pf.product_type = 'Excursion' AND pf.product_id = dp.product_id AND pf.product_type = dp.product_type\n    WHERE pf.payment_dt >= TIMESTAMP '2024-01-01'\n      AND pf.product_type = 'Excursion'\n    GROUP BY dp.language, pf.city, date_trunc('quarter', pf.payment_dt)\n),\nquarterly_sales AS (\n    SELECT \n        language, \n        city,\n        COALESCE(MAX(CASE WHEN quarter = 'Q1' THEN sales_count END), 0) AS q1_sales,\n        COALESCE(MAX(CASE WHEN quarter = 'Q2' THEN sales_count END), 0) AS q2_sales\n    FROM sales_by_period\n    GROUP BY language, city\n)\nSELECT \n    language, \n    city, \n    q1_sales, \n    q2_sales,\n    ROUND((q2_sales - q1_sales) * 100.0 / NULLIF(q1_sales, 0), 2) AS growth_rate\nFROM quarterly_sales\nWHERE q1_sales > 0\nORDER BY growth_rate DESC\nLIMIT 10;"
    },
    {
      "queryid": "3b1cc90f-d446-4592-becd-8c26efbabf56",
      "query": "WITH author_products AS (\n    SELECT \n        da.author_id, \n        da.name AS author_name, \n        dp.product_type, \n        dp.product_id\n    FROM quests.optimized.dim_author da\n    JOIN quests.optimized.dim_product dp \n        ON (\n            (dp.product_type = 'Excursion' AND dp.product_id IS NOT NULL) \n            OR (dp.product_type = 'Quest' AND dp.product_id IS NOT NULL)\n        )\n    -- Предполагаем, что связь автор-продукт реализована через dim_product (если нет, потребуется отдельная таблица)\n),\nraw_data AS (\n    SELECT \n        ap.author_id, \n        ap.author_name, \n        CASE WHEN pf.product_type = 'Excursion' THEN pf.product_id END AS excursion_id,\n        CASE WHEN pf.product_type = 'Quest' THEN pf.product_id END AS quest_id,\n        CASE WHEN pf.product_type = 'Excursion' THEN pf.amount END AS exc_amount,\n        CASE WHEN pf.product_type = 'Quest' THEN pf.amount END AS quest_amount\n    FROM author_products ap\n    LEFT JOIN quests.optimized.payment_facts pf\n        ON pf.product_id = ap.product_id AND pf.product_type = ap.product_type\n    LIMIT 500000\n),\ndup AS (\n    SELECT r.*, x.n AS mult FROM raw_data r CROSS JOIN (VALUES 1,2) AS x(n)\n),\ncalc AS (\n    SELECT \n        author_id, \n        author_name, \n        COUNT(excursion_id) + COUNT(quest_id) AS total_sales,\n        COALESCE(SUM(exc_amount),0) + COALESCE(SUM(quest_amount),0) AS total_revenue,\n        ROW_NUMBER() OVER (PARTITION BY author_id ORDER BY random()) AS rn,\n        AVG(exc_amount) OVER (PARTITION BY author_id) AS avg_exc,\n        MAX(quest_amount) OVER (PARTITION BY author_id) AS max_quest\n    FROM dup\n    GROUP BY author_id, author_name, excursion_id, quest_id, exc_amount, quest_amount\n)\nSELECT author_id, author_name, total_sales, total_revenue, avg_exc, max_quest\nFROM calc\nWHERE rn < 500\nORDER BY random();"
    },
    {
      "queryid": "dfcc8c65-1871-434d-a9de-fa31d0b7a59f",
      "query": "SELECT \n  CASE \n    WHEN purchase_count = 1 THEN 'Одноразовые'\n    WHEN purchase_count BETWEEN 2 AND 5 THEN '2-5 покупок'\n    WHEN purchase_count BETWEEN 6 AND 10 THEN '6-10 покупок'\n    ELSE '10+ покупок'\n  END AS purchase_segment,\n  COUNT(*) AS client_count,\n  AVG(purchase_count) AS avg_purchases\nFROM (\n  SELECT client_id, COUNT(*) AS purchase_count\n  FROM quests.optimized.payment_facts\n  GROUP BY client_id\n) t\nGROUP BY \n  CASE \n    WHEN purchase_count = 1 THEN 'Одноразовые'\n    WHEN purchase_count BETWEEN 2 AND 5 THEN '2-5 покупок'\n    WHEN purchase_count BETWEEN 6 AND 10 THEN '6-10 покупок'\n    ELSE '10+ покупок'\n  END\nORDER BY client_count DESC;"
    },
    {
      "queryid": "37a91112-1ccd-44a8-b150-a9cc4c76fc5f",
      "query": "SELECT\n  pf.loyalty_level,\n  COUNT(*) AS total_clients,\n  COUNT(IF(pf.is_repeat_purchase = 'Y', 1, NULL)) AS repeat_buyers,\n  ROUND(COUNT(IF(pf.is_repeat_purchase = 'Y', 1, NULL)) * 100.0 / COUNT(*), 2) AS repeat_rate,\n  ROUND(AVG(pf.amount), 2) AS avg_check\nFROM quests.optimized.payment_facts pf\nGROUP BY pf.loyalty_level\nORDER BY repeat_rate DESC;"
    },
    {
      "queryid": "ee06b54f-5c53-4f4b-90ea-bf36ffe517cd",
      "query": "SELECT category_name AS category, COUNT(*) AS sales, ROUND(AVG(amount), 2) AS avg_check\nFROM quests.optimized.payment_facts\nWHERE product_type = 'Excursion'\nGROUP BY category_name\nUNION ALL\nSELECT category_name AS category, COUNT(*) AS sales, ROUND(AVG(amount), 2) AS avg_check\nFROM quests.optimized.payment_facts\nWHERE product_type = 'Quest'\nGROUP BY category_name\nORDER BY avg_check DESC;"
    },
    {
      "queryid": "724dad7d-4263-4a03-a71e-34f977455713",
      "query": "SELECT \n  ecf.episode_name AS episode_name, \n  ecf.quest_name AS quest_name, \n  COUNT(*) AS completions, \n  AVG(ecf.time_spent) AS avg_time_minutes, \n  COUNT(DISTINCT ecf.client_id) AS unique_users\nFROM quests.optimized.episode_completion_facts ecf\nGROUP BY ecf.episode_id, ecf.episode_name, ecf.quest_name\nORDER BY completions DESC\nLIMIT 10;"
    },
    {
      "queryid": "40122a54-5caa-4e1e-9866-90abfa9472d6",
      "query": "SELECT\n  date_trunc('month', pf.payment_dt) AS month,\n  COUNT(*) AS total_sales,\n  COUNT(pf.promo_id) AS promo_sales,\n  SUM(pf.amount) AS total_revenue,\n  ROUND(AVG(CASE WHEN pf.promo_id IS NOT NULL THEN pf.amount END), 2) AS avg_check_promo,\n  ROUND(AVG(CASE WHEN pf.promo_id IS NULL THEN pf.amount END), 2) AS avg_check_regular\nFROM quests.optimized.payment_facts pf\nGROUP BY date_trunc('month', pf.payment_dt)\nORDER BY date_trunc('month', pf.payment_dt);"
    }
  ]
}